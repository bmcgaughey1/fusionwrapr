% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GridSurfaceStats.R
\name{GridSurfaceStats}
\alias{GridSurfaceStats}
\title{FUSION R command line interface -- Computes surface area and volume for the surface. Result is a raster layer.}
\usage{
GridSurfaceStats(
  inputfile = NULL,
  outputfile = NULL,
  samplefactor = NULL,
  quiet = FALSE,
  verbose = FALSE,
  version = FALSE,
  newlog = FALSE,
  log = NULL,
  locale = FALSE,
  ground = NULL,
  ascii = FALSE,
  area = FALSE,
  halfcell = NULL,
  svonly = FALSE,
  grid = NULL,
  gridxy = NULL,
  align = NULL,
  extent = NULL,
  use64bit = TRUE,
  runCmd = TRUE,
  saveCmd = TRUE,
  cmdFile = NULL,
  cmdClear = FALSE,
  echoCmd = FALSE,
  comment = NULL
)
}
\arguments{
\item{inputfile}{character (\strong{required}): File specifier for the input surface file. This can be a single
file, a wildcard specifier, or a text list file (extension .txt only).}

\item{outputfile}{character (\strong{required}): Base name for the output files containing the surface statistics
including the .dtm extension. If \code{ascii=TRUE}, the output files will all be in ASCII raster
format with the .asc extension.}

\item{samplefactor}{numeric (\strong{required}): Multiplier for \code{outputfile} cell size. \code{outputfile} cells will
represent \code{samplefactor * samplefactor} cells from the \code{inputfile}. When multiple input files are used,
the cell size of the first file is used to compute the outfile cell size.}

\item{quiet}{boolean: Suppress all output during the run.}

\item{verbose}{boolean: Display all status information during the run.}

\item{version}{boolean: Report version information and exit with no processing.}

\item{newlog}{boolean: Erase the existing log file and start a new log}

\item{log}{character: Use the name specified for the log file.}

\item{locale}{boolean: Adjust program logic to input and output locale-specific numeric
formats (e.g. use a comma for the decimal separator).}

\item{ground}{character: "file": Use the specified surface model to represent the ground surface
file may be wildcard or text list file (extension .txt only).}

\item{ascii}{boolean: Output all files in ASCII raster format with the .asc extension.}

\item{area}{boolean: Compute the surface area of inputfile instead of the surface area
divided by the flat cell area.}

\item{halfcell}{boolean: Force alignment of the output grid to match the grid used by the GridMetrics progam.
This option cannot be used with \code{grid, gridxy, extent, or align} switches.}

\item{svonly}{boolean: Output only the surface volume metric layer.}

\item{grid}{character: "X1,X2,Y1,Y2": Force the origin of the output grid to be (X,Y) instead of
computing an origin from the data extents and force the grid to
be W units wide and H units high...W and H will be rounded up to
a multiple of cellsize.}

\item{gridxy}{character: "X1,X2,Y1,Y2": Force the origin of the output grid to be (X1,Y1) instead
of computing an origin from the data extents and force the grid
to use (X2,Y2) as the upper right corner of the coverage area.
The actual upper right corner will be adjusted to be a multiple
of cellsize.}

\item{align}{character: Force the origin and extent of the output grid to match the
lower left corner and extent of the specified PLANS format DTM file.}

\item{extent}{character: Force the origin and extent of the output grid to match the
lower left corner and extent of the specified PLANS format DTM
file but adjust the origin to be an even multiple of the cell
size and the width and height to be multiples of the cell size.}

\item{use64bit}{boolean: indicates 64-bit version of the program
should be used.}

\item{runCmd}{boolean: indicates command line should be executed.}

\item{saveCmd}{boolean: indicates command line should be written to a file.}

\item{cmdFile}{character: contains the name of the file to which commands
should be written.}

\item{cmdClear}{boolean: indicates file for commands should be deleted (cleared) before the command
line is written.}

\item{echoCmd}{boolean: indicates command line should be displayed.}

\item{comment}{character string containing comment to be written to command file before writing
the actual command. Only used when \code{runCmd = FALSE} and \code{saveCmd = TRUE}. When written,
there is always a blank line before the comment line in the command file.}
}
\value{
Return value depends on \code{runCmd}. if \code{runCmd = TRUE}, return value is
  the (invisible) integer value return from the operating system after running the command.
  if \code{runCmd = FALSE}, return value is the (invisible) command line.
}
\description{
\code{GridSurfaceStats} creates command lines for the FUSION GridSurfaceStats program and optionally executes them.
}
\section{Multiple Commands}{

  LTKFunctions generate a separate command for each item when the required parameters are lists.
  This is useful when you want to use the same command and options but different input data and
  output files. However, this works only when the switches and options are the same for all
  commands (not lists). If you try to use a list of switches and/or options and a list of input
  files, you will produce commands using all sets of switches and/or options for every input
  file.
}

\examples{
\dontrun{
GridSurfaceStats("ground.dtm", 30.0, 4.0, "density.csv", "*.las")
}
}
\seealso{
Other LTKFunctions: 
\code{\link{CSV2Grid}()},
\code{\link{CanopyMaxima}()},
\code{\link{CanopyModel}()},
\code{\link{Catalog}()},
\code{\link{ClipDTM}()},
\code{\link{ClipData}()},
\code{\link{CloudMetrics}()},
\code{\link{Cover}()},
\code{\link{DTMDescribe}()},
\code{\link{DensityMetrics}()},
\code{\link{FilterData}()},
\code{\link{FirstLastReturn}()},
\code{\link{GridMetrics}()},
\code{\link{GridSample}()},
\code{\link{GridSurfaceCreate}()},
\code{\link{GroundFilter}()},
\code{\link{IntensityImage}()},
\code{\link{JoinDB}()},
\code{\link{MergeDTM}()},
\code{\link{MergeData}()},
\code{\link{MergeRaster}()},
\code{\link{PolyClipData}()},
\code{\link{RepairGridDTM}()},
\code{\link{ReturnDensity}()},
\code{\link{SplitDTM}()},
\code{\link{SurfaceSample}()},
\code{\link{SurfaceStats}()},
\code{\link{TINSurfaceCreate}()},
\code{\link{ThinData}()},
\code{\link{TopoMetrics}()},
\code{\link{TreeSeg}()},
\code{\link{fusionwrapr-package}}
}
\concept{LTKFunctions}
