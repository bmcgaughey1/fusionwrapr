% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GroundFilter.R
\name{GroundFilter}
\alias{GroundFilter}
\title{FUSION R command line interface -- Filters a point cloud to identify bare-earth points.}
\usage{
GroundFilter(
  outputfile = NULL,
  cellsize = NULL,
  datafile = NULL,
  quiet = FALSE,
  verbose = FALSE,
  version = FALSE,
  newlog = FALSE,
  log = NULL,
  locale = FALSE,
  nolaszipdll = FALSE,
  skipfilecheck = FALSE,
  lda = FALSE,
  surface = FALSE,
  median = NULL,
  smooth = NULL,
  finalsmooth = FALSE,
  outlier = NULL,
  gparam = NULL,
  wparam = NULL,
  aparam = NULL,
  bparam = NULL,
  tolerance = NULL,
  iterations = NULL,
  class = NULL,
  ignoreoverlap = FALSE,
  reclass = 2,
  extent = NULL,
  trim = NULL,
  diagnostics = FALSE,
  precision = NULL,
  use64bit = TRUE,
  runCmd = TRUE,
  saveCmd = TRUE,
  cmdFile = NULL,
  cmdClear = FALSE,
  echoCmd = FALSE,
  comment = NULL
)
}
\arguments{
\item{outputfile}{character (\strong{required}):  Name for the output point data file (stored in LAS format
when input data are LAS. When \code{lda = TRUE}, the output is stored in LDA format.}

\item{cellsize}{numeric (\strong{required}): Desired grid cell size in the same units as LIDAR data. This
cell size is used for intermediate surfaces and is not the cell size for the final ground surface model
created using GridSurfaceCreate. This is also the cell size used when \code{surface = TRUE}.}

\item{datafile}{character (\strong{required}): Name(s) of lidar data files.}

\item{quiet}{boolean: Suppress all output during the run.}

\item{verbose}{boolean: Display all status information during the run.}

\item{version}{boolean: Report version information and exit with no processing.}

\item{newlog}{boolean: Erase the existing log file and start a new log}

\item{log}{character: Use the name specified for the log file.}

\item{locale}{boolean: Adjust program logic to input and output locale-specific numeric
formats (e.g. use a comma for the decimal separator).}

\item{nolaszipdll}{boolean: Suppress the use of the LASzip dll (c) Martin Isenburg...
removes support for compressed LAS (LAZ) files. This option
is only useful for programs that read or write point files.}

\item{skipfilecheck}{boolean: Skip logic that checks for valid point files and removes those that are invalid
prior to the start of point processing. This option is designed to overcome some limitations with windows
and wildcard processing. This option is only useful for programs that read point data.}

\item{lda}{boolean: Store output data file in FUSION's LDA format. You cannot use this option with
\code{reclass = TRUE}.}

\item{surface}{boolean: Create a surface model using the final ground points.}

\item{median}{numeric: Apply median filter to intermediate surface model using # by # window
(default is no median filter).}

\item{smooth}{numeric: Apply mean filter to intermediate surface model using # by # window
(default is no smoothing).}

\item{finalsmooth}{boolean: Apply smoothing after the final iteration before selecting bare-earth points.
This option is only used when either \code{median = TRUE} or \code{smooth = TRUE}.}

\item{outlier}{character: "low,high": Omit points with elevations below \code{low} and above \code{high}.}

\item{gparam}{numeric: Value of g parameter (default is -2.0).}

\item{wparam}{numeric: Value of w parameter (default is 2.5).}

\item{aparam}{numeric: Value of a parameter (default is 1.0).}

\item{bparam}{numeric: Value of b parameter (default is 4.0).}

\item{tolerance}{numeric: Tolerance value for final filtering of ground points. If not specified,
weight values are used to determine final ground points. When specified, points with elevations
less than or equal to the final surface elevation plus the tolerance are included in the ground point data set.}

\item{iterations}{numeric: Number of iterations for the filtering logic (default is 5).
output to CSV file. These values are useful to determine the range of values to scale intensity products.}

\item{class}{character: "#,#,#,...": LAS files only: Specifies that only points with classification
values listed are to be included in the subsample to be considered as potential ground points.
Classification values should be separated by a comma. For example, class = "2,3,4,5" and can range from 0 to 31.
If the first character in string is ~, the list is interpreted as the classes you DO NOT want included
in the subsample. For example class = "~2,3" would include all class values EXCEPT 2 and 3.}

\item{ignoreoverlap}{boolean: Ignore points with the overlap flag set (LAS V1.4+ format).}

\item{reclass}{numeric: Reclassify the identified ground points using class #. Default value is 2.
When the /reclass option is used, all points in the input file(s) are written to the output file.
For ground points, the classification value is changed to #. For all other points, the classification
value remains the same unless the value is the same as the reclass # and the point is not identified
as a ground point. For these points, the class for the point is set to 1. You cannot use the reclass option
with the /lda option.}

\item{extent}{character: "X1,Y1,X2,Y2": Consider only points within the extent defined by (X1,Y1) and
(X2, Y2) for filtering.}

\item{trim}{character: "X1,Y1,X2,Y2": Output only points within the extent defined by (X1,Y1) and
(X2, Y2). The \code{trim} option is used along with the \code{extent} option to allow filtering using
points within a larger extent but only output points within the smaller extent. This minimizes edge
artifacts in the final point set and surface created using the points.}

\item{diagnostics}{boolean: Display diagnostic information and produce diagnostic files.}

\item{precision}{character: "scaleX,scaleY,scaleZ": Control the scale factor used for X, Y, and Z values
in output LAS files. These values will override the values in the source LAS files. There is rarely
any need for the scale parameters to be smaller than 0.001.}

\item{use64bit}{boolean: indicates 64-bit version of the program
should be used.}

\item{runCmd}{boolean: indicates command line should be executed.}

\item{saveCmd}{boolean: indicates command line should be written to a file.}

\item{cmdFile}{character: contains the name of the file to which commands
should be written.}

\item{cmdClear}{boolean: indicates file for commands should be deleted (cleared) before the command
line is written.}

\item{echoCmd}{boolean: indicates command line should be displayed.}

\item{comment}{character string containing comment to be written to command file before writing
the actual command. Only used when \code{runCmd = FALSE} and \code{saveCmd = TRUE}. When written,
there is always a blank line before the comment line in the command file.}
}
\value{
Return value depends on \code{runCmd}. if \code{runCmd = TRUE}, return value is
  the (invisible) integer value return from the operating system after running the command.
  if \code{runCmd = FALSE}, return value is the (invisible) command line.
}
\description{
\code{GroundFilter} creates command lines for the FUSION GroundFilter program and optionally executes them.
}
\section{Multiple Commands}{

  LTKFunctions generate a separate command for each item when the required parameters are lists.
  This is useful when you want to use the same command and options but different input data and
  output files. However, this works only when the switches and options are the same for all
  commands (not lists). If you try to use a list of switches and/or options and a list of input
  files, you will produce commands using all sets of switches and/or options for every input
  file.
}

\examples{
\dontrun{
GroundFilter("grnd_pts.las", 15.0, "*.las", iterations = 8)
}
}
\seealso{
Other LTKFunctions: 
\code{\link{CSV2Grid}()},
\code{\link{CanopyMaxima}()},
\code{\link{CanopyModel}()},
\code{\link{Catalog}()},
\code{\link{ClipDTM}()},
\code{\link{ClipData}()},
\code{\link{CloudMetrics}()},
\code{\link{Cover}()},
\code{\link{DTMDescribe}()},
\code{\link{DensityMetrics}()},
\code{\link{FilterData}()},
\code{\link{FirstLastReturn}()},
\code{\link{GridMetrics}()},
\code{\link{GridSample}()},
\code{\link{GridSurfaceCreate}()},
\code{\link{GridSurfaceStats}()},
\code{\link{IntensityImage}()},
\code{\link{JoinDB}()},
\code{\link{MergeDTM}()},
\code{\link{MergeData}()},
\code{\link{MergeRaster}()},
\code{\link{RepairGridDTM}()},
\code{\link{ReturnDensity}()},
\code{\link{SplitDTM}()},
\code{\link{SurfaceSample}()},
\code{\link{SurfaceStats}()},
\code{\link{TINSurfaceCreate}()},
\code{\link{ThinData}()},
\code{\link{TopoMetrics}()},
\code{\link{TreeSeg}()},
\code{\link{fusionwrapr-package}}
}
\concept{LTKFunctions}
