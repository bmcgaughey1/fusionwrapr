% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MergeDTM.R
\name{MergeDTM}
\alias{MergeDTM}
\title{FUSION R command line interface -- Function to merge several .DTM files into a single file.}
\usage{
MergeDTM(
  outputfile = NULL,
  inputfile = NULL,
  quiet = FALSE,
  verbose = FALSE,
  version = FALSE,
  newlog = FALSE,
  log = NULL,
  locale = FALSE,
  cellsize = NULL,
  overlap = NULL,
  disk = FALSE,
  precision = NULL,
  exactextent = FALSE,
  halfcell = FALSE,
  nofill = FALSE,
  use64bit = TRUE,
  runCmd = TRUE,
  saveCmd = TRUE,
  cmdFile = NULL,
  cmdClear = FALSE,
  echoCmd = FALSE,
  comment = NULL
)
}
\arguments{
\item{outputfile}{character (\strong{required}): Name for the output .DTM file containing the merged data.}

\item{inputfile}{character (\strong{required}):  File name template for .DTM files to be merged or the
name of a text file containing a list of .DTM files.}

\item{quiet}{boolean: Suppress all output during the run.}

\item{verbose}{boolean: Display all status information during the run.}

\item{version}{boolean: Report version information and exit with no processing.}

\item{newlog}{boolean: Erase the existing log file and start a new log}

\item{log}{character: Use the name specified for the log file.}

\item{locale}{boolean: Adjust program logic to input and output locale-specific numeric
formats (e.g. use a comma for the decimal separator).}

\item{cellsize}{numeric: Resample the data using a # by # pixel.}

\item{overlap}{character: Specify how overlap areas should be treated. Operators are: "average", "min",
"max", "add", "new." The \code{new} operator populates a pixel using the value from the last .DTM file containing
valid data for the pixel.}

\item{disk}{boolean: Merge the .DTM files to a disk file. The default behavior is to try to hold the
merged model into memory but there can be problems when there is not quite enough memory for the model.}

\item{precision}{numeric: Override the default precision for the merged output file. The default behavior
is to use the highest precision of the input models to establish the precision of the output model.
Valid values for precision are:
0     2-byte integer
1     4-byte integer
2     4-byte floating point (C type: float)
3     8-byte floating point (C type: double)}

\item{exactextent}{boolean: Preserve the exact extent of the input models in the output model. The
default behavior is to expand the extent to the nearest multiple of the output cell size.}

\item{halfcell}{boolean: Offset the origin and expand the width and height by 1/2 of the output cell size.}

\item{nofill}{boolean: Do not fill holes in the merged DTM.}

\item{use64bit}{boolean: indicates 64-bit version of the program
should be used.}

\item{runCmd}{boolean: indicates command line should be executed.}

\item{saveCmd}{boolean: indicates command line should be written to a file.}

\item{cmdFile}{character: contains the name of the file to which commands
should be written.}

\item{cmdClear}{boolean: indicates file for commands should be deleted (cleared) before the command
line is written.}

\item{echoCmd}{boolean: indicates command line should be displayed.}

\item{comment}{character string containing comment to be written to command file before writing
the actual command. Only used when \code{runCmd = FALSE} and \code{saveCmd = TRUE}. When written,
there is always a blank line before the comment line in the command file.}
}
\value{
Return value depends on \code{runCmd}. if \code{runCmd = TRUE}, return value is
  the (invisible) integer value return from the operating system after running the command.
  if \code{runCmd = FALSE}, return value is the (invisible) command line.
}
\description{
\code{MergeDTM} creates command lines for the FUSION MergeDTM program and optionally executes them.
}
\section{Multiple Commands}{

  LTKFunctions generate a separate command for each item when the required parameters are lists.
  This is useful when you want to use the same command and options but different input data and
  output files. However, this works only when the switches and options are the same for all
  commands (not lists). If you try to use a list of switches and/or options and a list of input
  files, you will produce commands using all sets of switches and/or options for every input
  file.
}

\examples{
\dontrun{
MergeDTM("merged_grnd.dtm", "*.dtm")
}
}
\seealso{
Other LTKFunctions: 
\code{\link{CSV2Grid}()},
\code{\link{CanopyMaxima}()},
\code{\link{CanopyModel}()},
\code{\link{Catalog}()},
\code{\link{ClipDTM}()},
\code{\link{ClipData}()},
\code{\link{CloudMetrics}()},
\code{\link{Cover}()},
\code{\link{DTMDescribe}()},
\code{\link{DensityMetrics}()},
\code{\link{FilterData}()},
\code{\link{FirstLastReturn}()},
\code{\link{GridMetrics}()},
\code{\link{GridSample}()},
\code{\link{GridSurfaceCreate}()},
\code{\link{GridSurfaceStats}()},
\code{\link{GroundFilter}()},
\code{\link{IntensityImage}()},
\code{\link{JoinDB}()},
\code{\link{MergeData}()},
\code{\link{MergeRaster}()},
\code{\link{RepairGridDTM}()},
\code{\link{ReturnDensity}()},
\code{\link{SplitDTM}()},
\code{\link{SurfaceSample}()},
\code{\link{SurfaceStats}()},
\code{\link{TINSurfaceCreate}()},
\code{\link{ThinData}()},
\code{\link{TopoMetrics}()},
\code{\link{TreeSeg}()},
\code{\link{fusionwrapr}}
}
\concept{LTKFunctions}
