% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Catalog.R
\name{Catalog}
\alias{Catalog}
\title{FUSION R command line interface -- Prepares a report describing a LIDAR dataset and optionally
 indexes all data file for use in FUSION}
\usage{
Catalog(
  datafile = NULL,
  catalogfile = NULL,
  quiet = FALSE,
  verbose = FALSE,
  version = FALSE,
  newlog = FALSE,
  log = NULL,
  locale = FALSE,
  nolaszipdll = FALSE,
  skipfilecheck = FALSE,
  image = FALSE,
  index = FALSE,
  newindex = FALSE,
  drawtiles = FALSE,
  coverage = FALSE,
  countreturns = FALSE,
  uselascounts = FALSE,
  rawcounts = FALSE,
  density = NULL,
  firstdensity = NULL,
  intensity = NULL,
  imageextent = NULL,
  bmp = FALSE,
  outlier = NULL,
  class = NULL,
  ignoreoverlap = FALSE,
  noclasssummary = FALSE,
  validate = NULL,
  projection = NULL,
  use64bit = TRUE,
  runCmd = TRUE,
  saveCmd = TRUE,
  cmdFile = NULL,
  cmdClear = FALSE,
  echoCmd = FALSE,
  comment = NULL
)
}
\arguments{
\item{datafile}{character (\strong{required}): LIDAR data file template or the name of text file containing a
list of file names (must have .txt extension).}

\item{catalogfile}{character (\strong{required}): Base name for the output catalog file (extensions will be added).}

\item{quiet}{boolean: Suppress all output during the run.}

\item{verbose}{boolean: Display all status information during the run.}

\item{version}{boolean: Report version information and exit with no processing.}

\item{newlog}{boolean: Erase the existing log file and start a new log}

\item{log}{character: Use the name specified for the log file.}

\item{locale}{boolean: Adjust program logic to input and output locale-specific numeric
formats (e.g. use a comma for the decimal separator).}

\item{nolaszipdll}{boolean: Suppress the use of the LASzip dll (c) Martin Isenburg...
removes support for compressed LAS (LAZ) files. This option
is only useful for programs that read or write point files.}

\item{skipfilecheck}{boolean: Skip logic that checks for valid point files and removes those that are invalid
prior to the start of point processing. This option is designed to overcome some limitations with windows
and wildcard processing. This option is only useful for programs that read point data.}

\item{image}{boolean: Create image files showing the coverage area for each LIDAR file.}

\item{index}{boolean: Create LIDAR data file indexes if they don't already exist.}

\item{newindex}{boolean: Create new LIDAR data file indexes for all files (even if they already exist).}

\item{drawtiles}{boolean: Draw data file extents and names on the intensity image.}

\item{coverage}{boolean: Create one image that shows the nominal coverage area for all data files
included in the catalog. Also creates a FUSION hotspot file that provides details for each file in the catalog.}

\item{countreturns}{boolean: Produce a count of returns by return number and include in the CSV and
HTML output reports.}

\item{uselascounts}{boolean: Use the return counts from the header of LAS files instead of scanning
the entire data file to count the returns. Many LAS files produced by TerraScan do not contain
 valid data for the return counts so make sure your data has good numbers before using this switch}

\item{rawcounts}{boolean: Outputs the number of returns (or first returns) in each cell. Used in
conjunction with the \code{density} and \code{firstdensity} options. The output is in PLANS DTM format.}

\item{density}{character: "area,min,max": Creates an image for all data files that shows the return density
for the area represented by each pixel. area is the pixel area, min is the minimum acceptable point
density, and max is the upper limit for the acceptable density range. Cells with point densities
falling within the min-max range are colored green, cells with point densities below the minimum
are colored red, and cells with densities above the maximum are colored blue.}

\item{firstdensity}{character: "area,min,max": Creates an image for all data files that shows the density of
first returns for the area represented by each pixel. area is the pixel area, min is the minimum
acceptable point density, and max is the upper limit for the acceptable density range. Cells with
first return densities falling within the min-max range are colored green, cells with point densities
below the minimum are colored red, and cells with densities above the maximum are colored blue.}

\item{intensity}{character: "area,min,max": Creates an intensity image for all data files using the average
intensity for all first returns within each pixel. area is the pixel area, min is the minimum
intensity value, and max is the maximum intensity value. A black to white color ramp is mapped
to the range of intensity values defined by min and max. Ideally, min and max correspond to
the range of intensity values present in the data. However, you may not always know the range of
values for a given data set.}

\item{imageextent}{character: "minx,miny,maxx,maxy": Limit the area covered by image products to the
specified extent.}

\item{bmp}{boolean: Save second copy of intensity, return density, and pulse density images in
BMP format with associated world file.}

\item{outlier}{character: "multiplier": Performs a simple analysis to identify data tiles that might
contain elevation outliers. The analysis marks tiles where the minimum, maximum, or range of
elevations are outside the range defined by:
mean value +- multiplier * std dev
The default multiplier is 2.0.}

\item{class}{character: "#,#,#,...": LAS files only: Specifies that only points with classification
values listed are to be included in the subsample to be considered as potential ground points.
Classification values should be separated by a comma. For example, class = "2,3,4,5" and can range from 0 to 31.
If the first character in string is ~, the list is interpreted as the classes you DO NOT want included
in the subsample. For example class = "~2,3" would include all class values EXCEPT 2 and 3.}

\item{ignoreoverlap}{boolean: Ignore points with the overlap flag set (LAS V1.4+ format).}

\item{noclasssummary}{boolean: Do not create a summary table showing the number of points by
LAS classification values. Only valid for LAS format files.}

\item{validate}{character: "maxreturn": Produce report describing potential errors in point data
files. Report will contain files with errors the might cause problems for other FUSION programs.
\code{maxreturn} is the maximum number of returns expected for a pulse.}

\item{projection}{character: Associate the specified projection file with shapefile and raster
data products.}

\item{use64bit}{boolean: indicates 64-bit version of the program
should be used.}

\item{runCmd}{boolean: indicates command line should be executed.}

\item{saveCmd}{boolean: indicates command line should be written to a file.}

\item{cmdFile}{character: contains the name of the file to which commands
should be written.}

\item{cmdClear}{boolean: indicates file for commands should be deleted (cleared) before the command
line is written.}

\item{echoCmd}{boolean: indicates command line should be displayed.}

\item{comment}{character string containing comment to be written to command file before writing
the actual command. Only used when \code{runCmd = FALSE} and \code{saveCmd = TRUE}. When written,
there is always a blank line before the comment line in the command file.}
}
\value{
Return value depends on \code{runCmd}. if \code{runCmd = TRUE}, return value is
  the (invisible) integer value return from the operating system after running the command.
  if \code{runCmd = FALSE}, return value is the (invisible) command line.
}
\description{
\code{Catalog} creates command lines for the FUSION Catalog program and optionally executes them.
}
\section{Multiple Commands}{

  LTKFunctions generate a separate command for each item when the required parameters are lists.
  This is useful when you want to use the same command and options but different input data and
  output files. However, this works only when the switches and options are the same for all
  commands (not lists). If you try to use a list of switches and/or options and a list of input
  files, you will produce commands using all sets of switches and/or options for every input
  file.
}

\examples{
\dontrun{
Catalog("points/*.las", "test")
}
}
\seealso{
Other LTKFunctions: 
\code{\link{CSV2Grid}()},
\code{\link{CanopyMaxima}()},
\code{\link{CanopyModel}()},
\code{\link{ClipDTM}()},
\code{\link{ClipData}()},
\code{\link{CloudMetrics}()},
\code{\link{Cover}()},
\code{\link{DTMDescribe}()},
\code{\link{DensityMetrics}()},
\code{\link{FilterData}()},
\code{\link{FirstLastReturn}()},
\code{\link{GridMetrics}()},
\code{\link{GridSample}()},
\code{\link{GridSurfaceCreate}()},
\code{\link{GridSurfaceStats}()},
\code{\link{GroundFilter}()},
\code{\link{IntensityImage}()},
\code{\link{JoinDB}()},
\code{\link{MergeDTM}()},
\code{\link{MergeData}()},
\code{\link{MergeRaster}()},
\code{\link{PolyClipData}()},
\code{\link{RepairGridDTM}()},
\code{\link{ReturnDensity}()},
\code{\link{SplitDTM}()},
\code{\link{SurfaceSample}()},
\code{\link{SurfaceStats}()},
\code{\link{TINSurfaceCreate}()},
\code{\link{ThinData}()},
\code{\link{TopoMetrics}()},
\code{\link{TreeSeg}()},
\code{\link{fusionwrapr-package}}
}
\concept{LTKFunctions}
