% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ThinData.R
\name{ThinData}
\alias{ThinData}
\title{FUSION R command line interface -- Thins point data to specific pulse densities.}
\usage{
ThinData(
  outputfile = NULL,
  density = NULL,
  cellsize = NULL,
  datafile = NULL,
  quiet = FALSE,
  verbose = FALSE,
  version = FALSE,
  newlog = FALSE,
  log = NULL,
  locale = FALSE,
  nolaszipdll = FALSE,
  skipfilecheck = FALSE,
  rseed = NULL,
  index = FALSE,
  class = NULL,
  ignoreoverlap = FALSE,
  lda = FALSE,
  precision = NULL,
  use64bit = TRUE,
  runCmd = TRUE,
  saveCmd = TRUE,
  cmdFile = NULL,
  cmdClear = FALSE,
  echoCmd = FALSE,
  comment = NULL
)
}
\arguments{
\item{outputfile}{character (\strong{required}): Name for output data file...will contain new dataset
thinned to the desired density.}

\item{density}{numeric (\strong{required}): Desired data density in pulses per unit area.}

\item{cellsize}{numeric (\strong{required}): Area of the cell used to compute data density specified in SQUARE UNITS}

\item{datafile}{character (\strong{required}): LIDAR data file template or the  name of a text file containing
a list of file names (must have .txt extension),}

\item{quiet}{boolean: Suppress all output during the run.}

\item{verbose}{boolean: Display all status information during the run.}

\item{version}{boolean: Report version information and exit with no processing.}

\item{newlog}{boolean: Erase the existing log file and start a new log}

\item{log}{character: Use the name specified for the log file.}

\item{locale}{boolean: Adjust program logic to input and output locale-specific numeric
formats (e.g. use a comma for the decimal separator).}

\item{nolaszipdll}{boolean: Suppress the use of the LASzip dll (c) Martin Isenburg...
removes support for compressed LAS (LAZ) files. This option
is only useful for programs that read or write point files.}

\item{skipfilecheck}{boolean: Skip logic that checks for valid point files and removes those that are invalid
prior to the start of point processing. This option is designed to overcome some limitations with windows
and wildcard processing. This option is only useful for programs that read point data.}

\item{rseed}{numeric: Random number stream to use for stochastic processes (100 streams are available 0-99).}

\item{index}{boolean: Create FUSION index files for the \code{outputfile}.}

\item{class}{character: "#,#,#,...": LAS files only: Specifies that only points with classification
values listed are to be included in the subsample to be considered as potential ground points.
Classification values should be separated by a comma. For example, class = "2,3,4,5" and can range from 0 to 31.
If the first character in string is ~, the list is interpreted as the classes you DO NOT want included
in the subsample. For example class = "~2,3" would include all class values EXCEPT 2 and 3.}

\item{ignoreoverlap}{boolean: Ignore points with the overlap flag set (LAS V1.4+ format).}

\item{lda}{boolean: Write sample files using FUSION's LDA format when using LAS input
files. The default behavior of ClipData (after version 2.35) is
to write data in LAS format when the input data are in LAS
format. When using input data in a format other than LAS, sample
files are written in LDA format.}

\item{precision}{character: "#,#,#": Control the scale factor used for X, Y, and Z
values in output LAS files. These values will override the values
in the source LAS files. There is rarely any need for the scale
parameters to be smaller than 0.001.}

\item{use64bit}{boolean: indicates 64-bit version of the program
should be used.}

\item{runCmd}{boolean: indicates command line should be executed.}

\item{saveCmd}{boolean: indicates command line should be written to a file.}

\item{cmdFile}{character: contains the name of the file to which commands
should be written.}

\item{cmdClear}{boolean: indicates file for commands should be deleted (cleared) before the command
line is written.}

\item{echoCmd}{boolean: indicates command line should be displayed.}

\item{comment}{character string containing comment to be written to command file before writing
the actual command. Only used when \code{runCmd = FALSE} and \code{saveCmd = TRUE}. When written,
there is always a blank line before the comment line in the command file.}
}
\value{
Return value depends on \code{runCmd}. if \code{runCmd = TRUE}, return value is
  the (invisible) integer value return from the operating system after running the command.
  if \code{runCmd = FALSE}, return value is the (invisible) command line.
}
\description{
\code{ThinData} creates command lines for the FUSION ThinData program and optionally executes them.
}
\section{Multiple Commands}{

  LTKFunctions generate a separate command for each item when the required parameters are lists.
  This is useful when you want to use the same command and options but different input data and
  output files. However, this works only when the switches and options are the same for all
  commands (not lists). If you try to use a list of switches and/or options and a list of input
  files, you will produce commands using all sets of switches and/or options for every input
  file.
}

\examples{
\dontrun{
ThinData("thinned_pts.las", 10, 100.0, "*.las")
}
}
\seealso{
Other LTKFunctions: 
\code{\link{CanopyMaxima}()},
\code{\link{CanopyModel}()},
\code{\link{Catalog}()},
\code{\link{ClipDTM}()},
\code{\link{ClipData}()},
\code{\link{CloudMetrics}()},
\code{\link{Cover}()},
\code{\link{DTMDescribe}()},
\code{\link{DensityMetrics}()},
\code{\link{FirstLastReturn}()},
\code{\link{GridMetrics}()},
\code{\link{GridSurfaceCreate}()},
\code{\link{GridSurfaceStats}()},
\code{\link{GroundFilter}()},
\code{\link{IntensityImage}()},
\code{\link{MergeDTM}()},
\code{\link{MergeData}()},
\code{\link{MergeRaster}()},
\code{\link{ReturnDensity}()},
\code{\link{SplitDTM}()},
\code{\link{SurfaceSample}()},
\code{\link{TINSurfaceCreate}()},
\code{\link{TopoMetrics}()},
\code{\link{TreeSeg}()},
\code{\link{fusionwrapr}}
}
\concept{LTKFunctions}
