% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FUSIONFunctions.R
\name{GridMetrics}
\alias{GridMetrics}
\title{FUSION R command line interface -- Function to create command lines for the GridMetrics program.}
\usage{
GridMetrics(
  groundfile = NULL,
  heightbreak = NULL,
  cellsize = NULL,
  outputfile = NULL,
  datafile = NULL,
  quiet = FALSE,
  verbose = FALSE,
  version = FALSE,
  newlog = FALSE,
  log = NULL,
  locale = FALSE,
  nolaszipdll = FALSE,
  outlier = NULL,
  class = NULL,
  ignoreoverlap = FALSE,
  id = NULL,
  minpts = NULL,
  minht = NULL,
  nocsv = FALSE,
  noground = FALSE,
  diskground = FALSE,
  nointdtm = FALSE,
  failnoz = FALSE,
  first = FALSE,
  nointensity = FALSE,
  rgb = NULL,
  fuel = FALSE,
  grid = NULL,
  gridxy = NULL,
  extent = NULL,
  align = NULL,
  buffer = NULL,
  cellbuffer = NULL,
  strata = NULL,
  intstrata = NULL,
  kde = NULL,
  topo = NULL,
  use64bit = TRUE,
  runCmd = TRUE,
  saveCmd = TRUE,
  cmdFile = NULL,
  cmdClear = FALSE,
  echoCmd = FALSE,
  comment = NULL
)
}
\arguments{
\item{groundfile}{character (\strong{required}): Name for ground surface model (PLANS DTM with .dtm extension).
May be wildcard or text list file (extension .txt only).}

\item{heightbreak}{numeric (\strong{required}): Height break for cover calculation.}

\item{cellsize}{numeric (\strong{required}): Desired grid cell size in the same units as LIDAR data.}

\item{outputfile}{character (\strong{required}): Base name for output file. Metrics are stored in CSV format with
.csv extension unless the /nocsv switch is used. Other outputs are stored in files named using the
base name and additional descriptive information. If the folder for the output file does not exist,
it will be created  when the function is called even when saving commands to a batch file.}

\item{datafile}{character (\strong{required}): Name(s) of lidar data files.}

\item{quiet}{boolean: Suppress all output during the run.}

\item{verbose}{boolean: Display all status information during the run.}

\item{version}{boolean: Report version information and exit with no processing.}

\item{newlog}{boolean: Erase the existing log file and start a new log}

\item{log}{character: Use the name specified for the log file.}

\item{locale}{boolean: Adjust program logic to input and output locale-specific numeric
formats (e.g. use a comma for the decimal separator).}

\item{nolaszipdll}{boolean: Suppress the use of the LASzip dll (c) Martin Isenburg...
removes support for compressed LAS (LAZ) files. This option
is only useful for programs that read or write point files.}

\item{outlier}{character: "low,high": Omit points with elevations below low and above high.
When used with data that has been normalized using a ground
surface, low and high are interpreted as heights above ground.
You should use care when using /outlier:low,high with /minht and
/maxht options. If the low value specified with /outlier is above
the value specified with /minht, the value for /outlier will
override the value specified for /minht. Similarly, if the high
value specified with /outlier is less than the value specified
for /maxht, the /outlier value will override the value for
/maxht.}

\item{class}{character: "#,#,#,...": LAS files only: Specifies that only points with classification
values listed are to be included in the subsample.
Classification values should be separated by a comma.
e.g. (2,3,4,5) and can range from 0 to 31.
If the first character in string is ~, the list is interpreted
as the classes you DO NOT want included in the subsample.
e.g. /class:~2,3 would include all class values EXCEPT 2 and 3.}

\item{ignoreoverlap}{boolean: Ignore points with the overlap flag set (LAS V1.4+ format).}

\item{id}{character: "identifier": Include the identifier string as the last column in every
record in the outputfile. The identifier will be included in
all files containing metrics (elevation, intensity, and topo).
The identifier cannot include spaces.}

\item{minpts}{numeric: Minimum number of points in a cell required to compute metrics
default is 4 points.}

\item{minht}{numeric: Minimum height for points used to compute metrics. Density always
uses all points including those with heights below the minimum.}

\item{nocsv}{boolean: Do not create an output file for cell metrics.}

\item{noground}{boolean: Do not use a ground surface model. When this option is specified,
omit the groundfile parameter from the command line. Cover
estimates, densitytotal, densityabove, and densitycell metrics
are meaningless when no ground surface model is used unless the
LIDAR data have been normalized to the ground surface using some
other process.}

\item{diskground}{boolean: Do not load ground surface models into memory. When this option
is specified, larger areas can be processed but processing will
be 4 to 5 times slower. Ignored when /noground option is used.}

\item{nointdtm}{boolean: Do not create an internal ground model that corresponds to the
data extent. This option is most often used to prevent edge
artifacts when computing metrics for small areas using a
relatively larger cell size.}

\item{failnoz}{boolean: Verify that all ground surface models can be opened and read
and exit immediately if there are any problems. The default
behavior is to go ahead and compute metrics using point
elevations (no normalization to create point heights).}

\item{first}{boolean: Use only first returns to compute all metrics (default is to
use all returns for metrics).}

\item{nointensity}{boolean: Do not compute metrics using intensity values (default is
to compute metrics using both intensity and elevation values).}

\item{rgb}{character: "color": Compute intensity metrics using the color value from the RGB
color for the returns. Valid with LAS version 1.2 and newer
data files that contain RGB information for each return (point
record types 2 and 3). Valid color values are R, G, or B.}

\item{fuel}{boolean: Apply fuel parameter models (cannot be used with /intensity,
/alldensity, or /first switches.}

\item{grid}{character: "X1,X2,Y1,Y2": Force the origin of the output grid to be (X,Y) instead of
computing an origin from the data extents and force the grid to
be W units wide and H units high...W and H will be rounded up to
a multiple of cellsize.}

\item{gridxy}{character: "X1,X2,Y1,Y2": Force the origin of the output grid to be (X1,Y1) instead
of computing an origin from the data extents and force the grid
to use (X2,Y2) as the upper right corner of the coverage area.
The actual upper right corner will be adjusted to be a multiple
of cellsize.}

\item{extent}{character: Force the origin and extent of the output grid to match the
lower left corner and extent of the specified PLANS format DTM
file but adjust the origin to be an even multiple of the cell
size and the width and height to be multiples of the cell size.}

\item{align}{character: Force the origin and extent of the output grid to match the
lower left corner and extent of the specified PLANS format DTM file.}

\item{buffer}{numeric: Add a buffer to the data extent specified by /grid or /gridxy
when computing metrics but only output data for the specified
extent. The buffer width is first converted to a cellbuffer and
then added all around the extent. The actual buffer width may be
slightly larger than specified by width.}

\item{cellbuffer}{numeric: Add a buffer to the data extent specified by /grid or /gridxy
when computing metrics but only output data for the specified
extent. The buffer (number of cells) is added around the extent.}

\item{strata}{character: "#,#,#,...": Count returns in various height strata. # gives the upper
limit for each strata. Returns are counted if their height
is >= the lower limit and < the upper limit. The first strata
contains points < the first limit. The last strata contains
points >= the last limit. Default strata: 0.15, 1.37, 5, 10,
20, 30.}

\item{intstrata}{character: "#, #, #,...": Compute metrics using the intensity values in various
height strata. Strata for intensity metrics are defined in
the same way as the /strata option. Default strata: 0.25, 1.37.}

\item{kde}{character: "window,mult": Compute the number of modes and minimum and maximum node
using a kernal density estimator. Window is the width of a
moving average smoothing window in data units and mult is a
multiplier for the bandwidth parameter of the KDE. Default
window is 2.5 and the multiplier is 1.0.}

\item{topo}{character: "dist,lat": Compute topographic metrics using the groundfile(s) and output
them in a separate file. Distance is the cell size for the 3 by
3 cell analysis area and lat is the latitude (+north, -south).}

\item{use64bit}{boolean: indicates 64-bit version of the program
should be used.}

\item{runCmd}{boolean: indicates command line should be executed.}

\item{saveCmd}{boolean: indicates command line should be written to a file.}

\item{cmdFile}{character: contains the name of the file to which commands
should be written.}

\item{cmdClear}{boolean: indicates file for commands should be deleted (cleared) before the command
line is written.}

\item{echoCmd}{boolean: indicates command line should be displayed.}

\item{comment}{character string containing comment to be written to command file before writing
the actual command. Only used when \code{runCmd = FALSE} and \code{saveCmd = TRUE}. When written,
there is always a blank line before the comment line in the command file.}
}
\value{
Return value depends on \code{runCmd}. if \code{runCmd = TRUE}, return value is
  the (invisible) integer value return from the operating system after running the command.
  if \code{runCmd = FALSE}, return value is the (invisible) command line.
}
\description{
\code{GridMetrics} creates command lines for the FUSION GridMetrics program and optionally executes them.
}
\section{Multiple Commands}{

  LTKFunctions generate a separate command for each item when the required parameters are lists.
  This is useful when you want to use the same command and options but different input data and
  output files. However, this works only when the switches and options are the same for all
  commands (not lists). If you try to use a list of switches and/or options and a list of input
  files, you will produce commands using all sets of switches and/or options for every input
  file.
}

\examples{
\dontrun{
GridMetrics("points/*.las", "test.csv", minht = 2.0)
}
}
\seealso{
Other LTKFunctions: 
\code{\link{CanopyModel}()},
\code{\link{ClipData}()},
\code{\link{CloudMetrics}()},
\code{\link{GridSurfaceCreate}()},
\code{\link{TreeSeg}()},
\code{\link{fusionwrapr}}
}
\concept{LTKFunctions}
