% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FUSIONFunctions.R
\name{verifyFolder}
\alias{verifyFolder}
\title{FUSION R command line interface -- Verify existence of a folder}
\usage{
verifyFolder(
  folder,
  runCmd = TRUE,
  saveCmd = TRUE,
  cmdFile = NULL,
  cmdClear = FALSE
)
}
\arguments{
\item{folder}{folder name}

\item{runCmd}{boolean: indicates command line should be executed. If TRUE, no
commands will be written to the batch file regardless of the value for \code{saveCmd}.}

\item{saveCmd}{boolean: indicates command line the create the folder(s) should be written to a file. This command will
create the folder(s) when the command file is run from a command prompt.}

\item{cmdFile}{character: contains the name of the file to which commands
should be written.}

\item{cmdClear}{boolean: indicates file for commands should be deleted (cleared) before the command
line is written.}
}
\value{
An (invisible) boolean TRUE, If the folder does not exist and cannot
  be created, execution stops.
}
\description{
This is a helper function used in the fusionwrapr package to verify
the existence of \code{folder} and create the folder(s) if it does not exist.
\code{verifyFolder} is normally called with a folder extracted using
\code{dirname()} when an output file is provided to a function. When saving commands
to a file, a command will be written to create the folder in addition to creating
the folder. This can make it easier to delete the results from a set of processing
steps and then re-run them using the command file. When saving to a command file,
there is checking to see if the folder already exists. This prevents multiple attempts
to create the same folder and any associated error or warning messages. In addition,
when saving to a command file, the path is enclosed in quotes to prevent problems
when the folder names contain spaces.
}
\examples{
\dontrun{
verifyFolder("/test")
}
}
