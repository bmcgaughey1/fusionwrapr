% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CoreFunctions.R
\name{dispatchCommand}
\alias{dispatchCommand}
\title{FUSION R command line interface -- Execute command lines or write them to a file.}
\usage{
dispatchCommand(
  cmd,
  options,
  required,
  runCmd,
  saveCmd,
  cmdClear,
  cmdFile,
  comment = NULL
)
}
\arguments{
\item{cmd}{character string containing the program name and possibly the path.}

\item{options}{character string containing command line options.}

\item{required}{character string(s) containing required parameters for the command line.}

\item{runCmd}{boolean indicating command line should be executed.}

\item{saveCmd}{boolean indicating command line should be written to a file.}

\item{cmdClear}{boolean indicating file for command should be deleted before the command
line is written.}

\item{cmdFile}{character string containing the name of the file to which commands
should be written.}

\item{comment}{character string containing comment to be written to command file before writing
the actual command. Only used when \code{runCmd = FALSE} and \code{saveCmd = TRUE}. When written,
there is always a blank line before the comment line in the command file.}
}
\value{
A single integer value or vector of integers. If \code{required} is a vector of
  strings and \code{runCmd = TRUE}, the return is a vector of return codes from the
  operating system indicating the return values from the FUSION program. If \code{required}
  is a vector of values, \code{runCmd = FALSE} and \code{saveCmd = TRUE}, the return
  is a vector of zeros. if \code{required} is a single string and \code{runCmd = TRUE},
  the return is the return value from the FUSION program. If \code{required} is a single
  string and \code{runCmd = FALSE} and \code{saveaCmd = TRUE}, the return value is 0.
}
\description{
This is a helper function used in the fusionwrapr package to either execute command lines or
write them to a file.
}
\examples{
\dontrun{
dispatchCommand("ClipData", "/minht:2.0", "*.las clip1.las", runCmd = TRUE)
dispatchCommand("ClipData", "/minht:2.0", "*.las clip1.las",
                 runCmd = FALSE, cmdClear = TRUE, cmdFile = "test.bat")
}
}
\keyword{internal}
