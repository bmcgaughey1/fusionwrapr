% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ClipData.R
\name{ClipData}
\alias{ClipData}
\title{FUSION R command line interface -- Clips subsamples of data specified by the lower left and upper
 right corners of the area.}
\usage{
ClipData(
  inputspecifier = NULL,
  samplefile = NULL,
  minx = "-1000000000",
  miny = "-1000000000",
  maxx = "1000000000",
  maxy = "1000000000",
  quiet = FALSE,
  verbose = FALSE,
  version = FALSE,
  newlog = FALSE,
  log = NULL,
  locale = FALSE,
  nolaszipdll = FALSE,
  skipfilecheck = FALSE,
  shape = 0,
  decimate = NULL,
  ground = NULL,
  zmin = NULL,
  zmax = NULL,
  zpercent = NULL,
  height = FALSE,
  timemin = NULL,
  timemax = NULL,
  anglemin = NULL,
  anglemax = NULL,
  zero = FALSE,
  biaselev = NULL,
  return = NULL,
  class = NULL,
  ignoreoverlap = FALSE,
  line = NULL,
  noindex = FALSE,
  index = FALSE,
  lda = FALSE,
  nooffset = FALSE,
  cleanlas = FALSE,
  precision = NULL,
  use64bit = TRUE,
  runCmd = TRUE,
  saveCmd = TRUE,
  cmdFile = NULL,
  cmdClear = FALSE,
  echoCmd = FALSE,
  comment = NULL
)
}
\arguments{
\item{inputspecifier}{character (\strong{required}): LIDAR data file template, name of a text file containing
a list of file names (must have .txt extension), or a
FUSION catalog file.}

\item{samplefile}{character (\strong{required}): Name for subsample file (extension will be added) or a
text file containing sample information for 1 or more samples. Each line in the text file should
have the output filename and the MinX MinY MaxX MaxY values for the sample area separated
by spaces or commas. The output filename cannot contain spaces. To save compressed LAS files,
specify the .laz extension. If the folder for the output file does not exist, it will be created
when the function is called even when saving commands to a batch file.}

\item{minx}{numeric: X for lower left corner of the sample area bounding box.}

\item{miny}{numeric: Y for lower left corner of the sample area bounding box.}

\item{maxx}{numeric: X for upper right corner of the sample area bounding box.}

\item{maxy}{numeric: Y for upper right corner of the sample area bounding box.}

\item{quiet}{boolean: Suppress all output during the run.}

\item{verbose}{boolean: Display all status information during the run.}

\item{version}{boolean: Report version information and exit with no processing.}

\item{newlog}{boolean: Erase the existing log file and start a new log}

\item{log}{character: Use the name specified for the log file.}

\item{locale}{boolean: Adjust program logic to input and output locale-specific numeric
formats (e.g. use a comma for the decimal separator).}

\item{nolaszipdll}{boolean: Suppress the use of the LASzip dll (c) Martin Isenburg...
removes support for compressed LAS (LAZ) files. This option
is only useful for programs that read or write point files.}

\item{skipfilecheck}{boolean: Skip logic that checks for valid point files and removes those that are invalid
prior to the start of point processing. This option is designed to overcome some limitations with windows
and wildcard processing. This option is only useful for programs that read point data.}

\item{shape}{numeric: Shape of the sample area (0 = rectangle, 1 = circle).}

\item{decimate}{numeric: Skip # points between included points (must be > 0).}

\item{ground}{character: Use a surface file with /zmin to include points above zmin
or with /zmax to include points below zmax. file may be
wildcard or text list file (extension .txt only). file
must be in FUSION/PLANS format.}

\item{zmin}{numeric: Include points above # elevation..use with /dtm to include points
above # height. Use with /height option to store heights in
output file.}

\item{zmax}{numeric: Include points below # elevation..use with /dtm to include points
below # height. Use with /height option to store heights in
output file.}

\item{zpercent}{numeric: Include only the upper # percent of the points..if # is (-) only
the lower # percent of the points..# = 0-100.}

\item{height}{boolean: Convert point elevations into heights above ground using the
specified DTM file..use with /dtm.}

\item{timemin}{numeric: Include points with GPS times greater than # (LAS only).}

\item{timemax}{numeric: Include points with GPS times less than or equal to # (LAS only).
Interpretation of # depends on the GPS time recorded in the LAS
point records.}

\item{anglemin}{numeric: Include points with scan angles greater than # (LAS only).}

\item{anglemax}{numeric: Include points with scan angles less than or equal to # (LAS only).}

\item{zero}{boolean: Save subsample files that contain no data points.}

\item{biaselev}{numeric: Add an elevation offset to every LIDAR point..# can be + or -.}

\item{return}{character: "c,c,c,...": Specifies the returns to be included in the sample (can
include A,1,2,3,4,5,6,7,8,9,F,L,O) Options are specified without
commas (e.g. /return:123) For LAS files only: F indicates first
and only returns, L indicates last of many returns.}

\item{class}{character: "c,c,c,...": LAS files only: Specifies that only points with classification
values listed are to be included in the subsample.
Classification values should be separated by a comma.
e.g. (2,3,4,5) and can range from 0 to 31.
If the first character in string is ~, the list is interpreted
as the classes you DO NOT want included in the subsample.
e.g. /class:~2,3 would include all class values EXCEPT 2 and 3.}

\item{ignoreoverlap}{boolean: Ignore points with the overlap flag set (LAS V1.4+ format).}

\item{line}{numeric: LAS files only: Only include returns from the specified flight
line. Line numbering varies by acquisition so you need to know
your data to specify values for the flight line number.}

\item{noindex}{boolean: Do not use the data index files to access the data files.}

\item{index}{boolean: Create FUSION index files for the SampleFile.}

\item{lda}{boolean: Write sample files using FUSION's LDA format when using LAS input
files. The default behavior of ClipData (after version 2.35) is
to write data in LAS format when the input data are in LAS
format. When using input data in a format other than LAS, sample
files are written in LDA format.}

\item{nooffset}{boolean: Removes the offset value in the output LAS file making it
difficult to pinpoint the location of the point cloud. This is
typically used when the location of a sample cannot be known.}

\item{cleanlas}{boolean: Only output points that adhere to the LAS format specification
(valid GPS time, return # from 1 to 5, within header extent,
points not flagged as withheld. Valid for LAS format input.}

\item{precision}{character: "#,#,#": Control the scale factor used for X, Y, and Z
values in output LAS files. These values will override the values
in the source LAS files. There is rarely any need for the scale
parameters to be smaller than 0.001.}

\item{use64bit}{boolean: indicates 64-bit version of the program
should be used.}

\item{runCmd}{boolean: indicates command line should be executed.}

\item{saveCmd}{boolean: indicates command line should be written to a file.}

\item{cmdFile}{character: contains the name of the file to which commands
should be written.}

\item{cmdClear}{boolean: indicates file for commands should be deleted (cleared) before the command
line is written.}

\item{echoCmd}{boolean: indicates command line should be displayed.}

\item{comment}{character string containing comment to be written to command file before writing
the actual command. Only used when \code{runCmd = FALSE} and \code{saveCmd = TRUE}. When written,
there is always a blank line before the comment line in the command file.}
}
\value{
Return value depends on \code{runCmd}. if \code{runCmd = TRUE}, return value is
  the (invisible) integer value return from the operating system after running the command.
  if \code{runCmd = FALSE}, return value is the (invisible) command line.
}
\description{
\code{ClipData} creates command lines for the FUSION ClipData program and optionally executes them.
}
\section{Multiple Commands}{

  LTKFunctions generate a separate command for each item when the required parameters are lists.
  This is useful when you want to use the same command and options but different input data and
  output files. However, this works only when the switches and options are the same for all
  commands (not lists). If you try to use a list of switches and/or options and a list of input
  files, you will produce commands using all sets of switches and/or options for every input
  file.
}

\examples{
\dontrun{
ClipData("*.las", "clip1.las", ground = "small.dtm", height = TRUE)
}
}
\seealso{
Other LTKFunctions: 
\code{\link{CSV2Grid}()},
\code{\link{CanopyMaxima}()},
\code{\link{CanopyModel}()},
\code{\link{Catalog}()},
\code{\link{ClipDTM}()},
\code{\link{CloudMetrics}()},
\code{\link{Cover}()},
\code{\link{DTMDescribe}()},
\code{\link{DensityMetrics}()},
\code{\link{FilterData}()},
\code{\link{FirstLastReturn}()},
\code{\link{GridMetrics}()},
\code{\link{GridSample}()},
\code{\link{GridSurfaceCreate}()},
\code{\link{GridSurfaceStats}()},
\code{\link{GroundFilter}()},
\code{\link{IntensityImage}()},
\code{\link{JoinDB}()},
\code{\link{MergeDTM}()},
\code{\link{MergeData}()},
\code{\link{MergeRaster}()},
\code{\link{RepairGridDTM}()},
\code{\link{ReturnDensity}()},
\code{\link{SplitDTM}()},
\code{\link{SurfaceSample}()},
\code{\link{SurfaceStats}()},
\code{\link{TINSurfaceCreate}()},
\code{\link{ThinData}()},
\code{\link{TopoMetrics}()},
\code{\link{TreeSeg}()},
\code{\link{fusionwrapr}}
}
\concept{LTKFunctions}
